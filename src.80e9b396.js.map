{"version":3,"sources":["index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger1","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","logger","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","id","logSuccess","logError","warn","amount","catch"],"mappings":";AA0EA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAzEA,IAAMA,EAAQ,SAACC,GACN,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACTF,EAAWF,GAAAA,OAAAA,SAKXK,EAAU,SAACC,GAASC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAxC,QAEhBP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ,GAIjB,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAC3BC,IAAAA,EAAeF,EAASG,IAAI,SAACC,GACjCA,OAAAA,EAAKP,OAASI,EAAgBG,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCN,QAASM,EAAKN,SAAWM,IAGxD,OAAA,IAAIjB,QAAQ,SAACC,EAASC,GAC3BD,EAAQc,MAGNG,EAAS,SAACH,GAAiBT,OAAAA,QAAQa,MAAMJ,IAE/CH,EAAgBH,EAAO,SAASD,KAAKU,GACrCN,EAAgBH,EAAO,OAAOD,KAAKU,GAInC,IAAME,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAACC,GACjB7B,IAAAA,EAAQsB,EAA0B,IAAK,KAEtC,OAAA,IAAIpB,QAAQ,SAACC,EAASC,GAC3BC,WAAW,WACUoB,KAAKE,SAAW,GAGjCxB,EAAQ,CAAC2B,GAAGD,EAAYC,GAAIvB,KAAKP,IAEjCI,EAAOyB,EAAYC,KAEpB9B,MAID+B,EAAa,SAAgB,GAAdD,IAAAA,EAAAA,EAAAA,GAAIvB,EAAAA,EAAAA,KACvBC,QAAQC,IAAmBqB,eAAAA,OAAAA,EAAmBvB,kBAAAA,OAAAA,EAA9C,QAGIyB,EAAW,SAACF,GAChBtB,QAAQyB,KAAqCH,gCAAAA,OAAAA,EAA7C,+BAGFF,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH,GAEhEJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH,GAEhEJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,KAAMxB,KAAKqB,GAAYI,MAAMH,GAE/DJ,EAAgB,CAAEE,GAAI,GAAII,OAAQ,MAAOxB,KAAKqB,GAAYI,MAAMH","file":"src.80e9b396.js","sourceRoot":"..\\src","sourcesContent":["// Task 1\r\nconst delay = (ms) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(`${ms}`), ms;\r\n    });\r\n  });\r\n};\r\n\r\nconst logger1 = (time) => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger1);\r\ndelay(1000).then(logger1);\r\ndelay(1500).then(logger1);\r\n\r\n// Task2\r\n\r\nconst users = [\r\n  { name: \"Mango\", active: true },\r\n  { name: \"Poly\", active: false },\r\n  { name: \"Ajax\", active: true },\r\n  { name: \"Lux\", active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  const updatedUsers = allUsers.map((user) =>\r\n    user.name === userName ? { ...user, active: !user.active } : user\r\n  );\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(updatedUsers)\r\n  })\r\n};\r\nconst logger = (updatedUsers) => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, \"Mango\").then(logger);\r\ntoggleUserState(users, \"Lux\").then(logger);\r\n\r\n// Task3\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({id:transaction.id, time:delay});\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = (id) => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n"]}