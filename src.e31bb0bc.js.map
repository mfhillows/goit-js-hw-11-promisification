{"version":3,"sources":["index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger1","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","logger","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","canProcess","id","logSuccess","logError","warn","amount","catch"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["// Task 1\r\nconst delay = (ms) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(`${ms}`);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger1 = (time) => console.log(`Resolved after ${time}ms`);\r\n\r\ndelay(2000).then(logger1);\r\ndelay(1000).then(logger1);\r\ndelay(1500).then(logger1);\r\n\r\n// Task2\r\n\r\nconst users = [\r\n  { name: \"Mango\", active: true },\r\n  { name: \"Poly\", active: false },\r\n  { name: \"Ajax\", active: true },\r\n  { name: \"Lux\", active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  const updatedUsers = allUsers.map((user) =>\r\n    user.name === userName ? { ...user, active: !user.active } : user\r\n  );\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve(updatedUsers)\r\n  })\r\n};\r\nconst logger = (updatedUsers) => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, \"Mango\").then(logger);\r\ntoggleUserState(users, \"Lux\").then(logger);\r\n\r\n// Task3\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({id:transaction.id, time:delay});\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = (id) => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n"]}